{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEAC,EAAAF,GAASG,OAAOC,KAAK,CACnBC,MAAO,QACPC,SAAU,aACVC,SAAU,OACVC,QAAS,IAIX,IAAMC,EAAMC,SAASC,cAAc,yBACnCF,EAAIG,MAAMC,UAAY,SACtBJ,EAAIG,MAAMP,MAAQ,OAClBI,EAAIG,MAAME,OAAS,OACnBL,EAAIG,MAAMG,SAAW,OAIrB,IAAMC,EAAYN,SAASC,cAAc,SAEzC,SAASM,EAAcX,EAAUY,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAAKC,GACvBC,YAAW,WACaC,KAAKC,SAAW,GAGpCJ,EAAI,CAAEd,WAAUY,UAGhBG,EAAI,CAAEf,WAAUY,S,GAEjBA,E,IAqBPF,EAAUS,iBAAiB,UAjB3B,SAAiBC,GACfA,EAAIC,iBAIJ,IAHA,IAAIC,EAAQC,OAAOb,EAAUE,MAAMY,OAC/BC,EAASF,OAAOb,EAAUe,OAAOD,OACjCE,EAAOH,OAAOb,EAAUgB,KAAKF,OACxBG,EAAI,EAAGA,GAAKF,EAAQE,GAAK,EAChChB,EAAcgB,EAAGL,GACdM,MAAK,SAAAC,G,IAAG7B,EAAQ6B,EAAR7B,SAAUY,EAAKiB,EAALjB,MACjBhB,EAAAF,GAASG,OAAOiC,QAAQ,uBAAwCC,OAAf/B,EAAS,QAAY+B,OAANnB,EAAM,M,IAEvEoB,OAAM,SAAAH,G,IAAG7B,EAAQ6B,EAAR7B,SAAUY,EAAKiB,EAALjB,MAClBhB,EAAAF,GAASG,OAAOoC,QAAQ,sBAAqCF,OAAf/B,EAAS,QAAY+B,OAANnB,EAAM,M,IAEvEU,GAASI,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nNotiflix.Notify.init({\n  width: '350px',\n  position: 'center-top',\n  distance: '10px',\n  opacity: 1,\n  \n});\n\nconst btn = document.querySelector('button[type=\"submit\"]');\nbtn.style.textAlign = \"center\";\nbtn.style.width = \"auto\";\nbtn.style.height = \"auto\";\nbtn.style.fontSize = \"16px\";\n    \n\n\nconst inputForm = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        // Fulfill\n        res({ position, delay });\n      } else {\n        // Reject\n        rej({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onClick(evt) {\n  evt.preventDefault();\n  let delay = Number(inputForm.delay.value);\n  let amount = Number(inputForm.amount.value);\n  let step = Number(inputForm.step.value);\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n}\n\ninputForm.addEventListener('submit', onClick);\n"],"names":["$6JpON","parcelRequire","$parcel$interopDefault","Notify","init","width","position","distance","opacity","$ce04d3a99e08e73b$var$btn","document","querySelector","style","textAlign","height","fontSize","$ce04d3a99e08e73b$var$inputForm","$ce04d3a99e08e73b$var$createPromise","delay","Promise","res","rej","setTimeout","Math","random","addEventListener","evt","preventDefault","delay1","Number","value","amount","step","i","then","param","success","concat","catch","failure"],"version":3,"file":"03-promises.1ec2ee51.js.map"}